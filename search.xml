<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Nginx配置文件介绍]]></title>
      <url>https://yatokami.github.io/2016/10/08/Nginx1/</url>
      <content type="html"><![CDATA[<h1 id="Nginx配置文件部分配置介绍"><a href="#Nginx配置文件部分配置介绍" class="headerlink" title="Nginx配置文件部分配置介绍"></a>Nginx配置文件部分配置介绍</h1><p>Nginx是一个高性能的HTTP和反向代理服务器，它是一款轻量级的服务器软件，配置也很简单。Nginx常常搭配php一起使用，所以我推荐大家可以直接使用lnmp，内置php,mysql,nginx等工具集成<br>lnmp下载地址内附教程: <a href="http://lnmp.org/" target="_blank" rel="external">http://lnmp.org/</a><br>这里给了一些Nginx的文件配置和负载均衡的http节点配置介绍</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#运行用户</span></div><div class="line"><span class="attribute">user</span>  www www;</div><div class="line"></div><div class="line"><span class="comment">#启动进程</span></div><div class="line"><span class="attribute">worker_processes</span> auto;</div><div class="line"></div><div class="line"><span class="comment">#全局错误日志及pid文件</span></div><div class="line"><span class="attribute">error_log</span>  /home/wwwlogs/nginx_error.log  <span class="literal">crit</span>;</div><div class="line"></div><div class="line"><span class="attribute">pid</span>        /usr/local/nginx/logs/nginx.pid;</div><div class="line"></div><div class="line"><span class="comment">#Specifies the value for maximum file descriptors that can be opened by this process.</span></div><div class="line"><span class="attribute">worker_rlimit_nofile</span> <span class="number">51200</span>;</div><div class="line"></div><div class="line"><span class="comment">#工作模式和连接数上限</span></div><div class="line"><span class="section">events</span></div><div class="line">    &#123;</div><div class="line">        <span class="attribute">use</span> <span class="literal">epoll</span>;</div><div class="line">        <span class="attribute">worker_connections</span> <span class="number">51200</span>;<span class="comment">#单个后台worker process进程的最大并发链接数</span></div><div class="line">        <span class="attribute">multi_accept</span> <span class="literal">on</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"><span class="comment">#设定http服务器，利用他的反向代理功能提供负载均衡支持</span></div><div class="line"><span class="section">http</span></div><div class="line">    &#123;</div><div class="line">        <span class="comment">#设定mime类型，类型由mime.type文件定义</span></div><div class="line">        <span class="attribute">include</span>       mime.types;</div><div class="line">        <span class="attribute">default_type</span>  application/octet-stream;</div><div class="line"></div><div class="line"></div><div class="line">        <span class="attribute">server_names_hash_bucket_size</span> <span class="number">128</span>;  <span class="comment">#服务器名字的hash表大小</span></div><div class="line">        <span class="attribute">client_header_buffer_size</span> <span class="number">32k</span>;      <span class="comment">#上传文件大小限制</span></div><div class="line">        <span class="attribute">large_client_header_buffers</span> <span class="number">4</span> <span class="number">32k</span>;  <span class="comment">#设定请求缓存头大小</span></div><div class="line">        <span class="attribute">client_max_body_size</span> <span class="number">50m</span>;           <span class="comment">#设定请求缓存主体最大限制</span></div><div class="line"></div><div class="line">        <span class="attribute">sendfile</span>   <span class="literal">on</span>;                      <span class="comment">#开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成off。</span></div><div class="line">        <span class="attribute">tcp_nopush</span> <span class="literal">on</span>;<span class="comment">#防止网络阻塞</span></div><div class="line"></div><div class="line">        <span class="attribute">keepalive_timeout</span> <span class="number">60</span>;               <span class="comment">#超时时间，单位为秒</span></div><div class="line"></div><div class="line">        <span class="attribute">tcp_nodelay</span> <span class="literal">on</span>;                     <span class="comment">#防止网络阻塞</span></div><div class="line"></div><div class="line">        <span class="comment">#FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度</span></div><div class="line">        <span class="attribute">fastcgi_connect_timeout</span> <span class="number">300</span>;</div><div class="line">        <span class="attribute">fastcgi_send_timeout</span> <span class="number">300</span>;</div><div class="line">        <span class="attribute">fastcgi_read_timeout</span> <span class="number">300</span>;</div><div class="line">        <span class="attribute">fastcgi_buffer_size</span> <span class="number">64k</span>;</div><div class="line">        <span class="attribute">fastcgi_buffers</span> <span class="number">4</span> <span class="number">64k</span>;</div><div class="line">        <span class="attribute">fastcgi_busy_buffers_size</span> <span class="number">128k</span>;</div><div class="line">        <span class="attribute">fastcgi_temp_file_write_size</span> <span class="number">256k</span>;</div><div class="line"></div><div class="line">        <span class="comment">#gzip模块设置</span></div><div class="line">        <span class="attribute">gzip</span> <span class="literal">on</span>;                            <span class="comment">#开启gzip压缩输出</span></div><div class="line">        <span class="attribute">gzip_min_length</span>  <span class="number">1k</span>;                <span class="comment">#最小压缩文件大小</span></div><div class="line">        <span class="attribute">gzip_buffers</span>     <span class="number">4</span> <span class="number">16k</span>;             <span class="comment">#压缩缓冲区</span></div><div class="line">        <span class="attribute">gzip_http_version</span> <span class="number">1</span>.<span class="number">1</span>;              <span class="comment">#压缩版本默认1.1</span></div><div class="line">        <span class="attribute">gzip_comp_level</span> <span class="number">2</span>;                  <span class="comment">#压缩等级</span></div><div class="line">        <span class="attribute">gzip_types</span>     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;<span class="comment">#压缩类型，默认就已经包含text/html</span></div><div class="line">        <span class="attribute">gzip_vary</span> <span class="literal">on</span>;                       </div><div class="line">        <span class="attribute">gzip_proxied</span>   expired <span class="literal">no</span>-cache <span class="literal">no</span>-store private auth;</div><div class="line">        <span class="attribute">gzip_disable</span>   <span class="string">"MSIE [1-6]\."</span>;</div><div class="line"></div><div class="line">        <span class="comment">#limit_conn_zone $binary_remote_addr zone=perip:10m; #开启限制IP连接数的时候需要使用</span></div><div class="line">        <span class="comment">##If enable limit_conn_zone,add "limit_conn perip 10;" to server section.</span></div><div class="line"></div><div class="line">        <span class="attribute">server_tokens</span> <span class="literal">off</span>;                  <span class="comment">#并不会让nginx执行的速度更快，但它可以关闭在错误页面中的nginx版本数字，这样对于安全性是有好处的。</span></div><div class="line">        <span class="attribute">access_log</span> <span class="literal">off</span>;                     <span class="comment">#设置nginx是否将存储访问日志。关闭这个选项可以让读取磁盘IO操作更快(aka,YOLO)</span></div><div class="line"></div><div class="line"><span class="comment">#虚拟主机的配置</span></div><div class="line"><span class="section">server</span></div><div class="line">    &#123;</div><div class="line">        <span class="attribute">listen</span> <span class="number">80</span> default_server;           <span class="comment">#默认监听端口</span></div><div class="line">        <span class="comment">#listen [::]:80 default_server ipv6only=on;</span></div><div class="line">        <span class="attribute">server_name</span> www.lnmp.org;           <span class="comment">#域名</span></div><div class="line">        <span class="attribute">index</span> index.html index.htm index.php; <span class="comment">#服务器默认首页文件</span></div><div class="line">        <span class="attribute">root</span>  /home/wwwroot/default;  <span class="comment">#网页文件目录</span></div><div class="line">        <span class="attribute">autoindex</span> <span class="literal">on</span>;               <span class="comment">#是否开启自动列目录</span></div><div class="line">        </div><div class="line">        <span class="comment">#error_page   404   /404.html;</span></div><div class="line">        <span class="attribute">include</span> enable-php.conf;</div><div class="line">        </div><div class="line">        <span class="comment">#查看nginx状态</span></div><div class="line">        <span class="attribute">location</span> /nginx_status</div><div class="line">        &#123;</div><div class="line">            <span class="attribute">stub_status</span> <span class="literal">on</span>;</div><div class="line">            <span class="attribute">access_log</span>   <span class="literal">off</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">#图片缓存时间设置</span></div><div class="line">        <span class="attribute">location</span> <span class="regexp">~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span></div><div class="line">        &#123;</div><div class="line">            <span class="attribute">expires</span>      <span class="number">30d</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">#js和css缓存时间设置</span></div><div class="line">        <span class="attribute">location</span> <span class="regexp">~ .*\.(js|css)?$</span></div><div class="line">        &#123;</div><div class="line">            <span class="attribute">expires</span>      <span class="number">12h</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="attribute">location</span> <span class="regexp">~ /\.</span></div><div class="line">        &#123;</div><div class="line">            <span class="attribute">deny</span> all;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="attribute">access_log</span>  /home/wwwlogs/access.log;</div><div class="line">    &#125;</div><div class="line"><span class="attribute">include</span> vhost/<span class="regexp">*.conf</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="负载均衡的配置"><a href="#负载均衡的配置" class="headerlink" title="负载均衡的配置"></a>负载均衡的配置</h1><figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">http&#123;</div><div class="line">    <span class="meta">#负载均衡服务器列表</span></div><div class="line">	upstream myproject &#123;</div><div class="line">			<span class="meta">#ip_hash;           #开启ip_hash让用户能保证多次访问时都是访问第一个子服务器</span></div><div class="line">			<span class="meta">#weight代表权重，权重值越高用户访问到服务器概率越大</span></div><div class="line">			<span class="keyword">server</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.1</span>:<span class="number">8000</span>;<span class="meta">#default weight=1</span></div><div class="line">			<span class="keyword">server</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.132</span>:<span class="number">3002</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="meta">#设置第一个虚拟主机</span></div><div class="line">	<span class="keyword">server</span> &#123;</div><div class="line">		listen <span class="number">8080</span>;</div><div class="line">		location / &#123;</div><div class="line">			proxy_pass http:<span class="comment">//myproject;#请求转向mysvr 定义的服务器列表</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="meta">#设置第二个虚拟主机</span></div><div class="line">	<span class="keyword">server</span> &#123;</div><div class="line">	    ....</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>参考文章： <a href="http://www.cnblogs.com/xiaogangqq123/archive/2011/03/02/1969006.html" target="_blank" rel="external">http://www.cnblogs.com/xiaogangqq123/archive/2011/03/02/1969006.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Node入门之安装Node]]></title>
      <url>https://yatokami.github.io/2016/09/17/NodeStart1/</url>
      <content type="html"><![CDATA[<h1 id="Nodejs究竟是什么？"><a href="#Nodejs究竟是什么？" class="headerlink" title="Nodejs究竟是什么？"></a>Nodejs究竟是什么？</h1><blockquote>
<p> 在网上有很多新人都认为nodejs是一门新语言,其实这是错误的，Node是一个服务器程序，nodejs说到底只是运行在服务器上的javascript。Node本身运行是靠Google开发的 V8 JavaScript引擎在浏览器上快速解析并执行代码。</p>
</blockquote>
<h1 id="如何在安装Nodjs呢？"><a href="#如何在安装Nodjs呢？" class="headerlink" title="如何在安装Nodjs呢？"></a>如何在安装Nodjs呢？</h1><h2 id="在windows下安装并运行nodejs"><a href="#在windows下安装并运行nodejs" class="headerlink" title="在windows下安装并运行nodejs"></a>在windows下安装并运行nodejs</h2><h3 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><blockquote>
<p>首先进入Node官网 <a href="https://nodejs.org/en/download/" target="_blank" rel="external">https://nodejs.org/en/download/</a> 可以直接如下图多个下载选择<br><img src="http://odoqyfmpu.bkt.clouddn.com/1.png" alt="image"><br>这里你可以根据自己电脑系统进行选择下载。这里因为我们是windows所以我们推荐使用.msi后缀的文件下载。下载后文件如下<br><img src="http://odoqyfmpu.bkt.clouddn.com/2.png" alt="image"><br>双击这个安装包<img src="http://odoqyfmpu.bkt.clouddn.com/3.png" alt="image">    </p>
<p><strong>这里默认安装与C盘下，我们也选择默认next下一步</strong> </p>
<p><img src="http://odoqyfmpu.bkt.clouddn.com/4.png" alt="image"><br>这里是选择你要安装的功能我们依旧默认下一步，至此我们安装已经全部完成，接下来如何检验是否安装成功,只要用户打开cmd(win+R)在命令行输入node<br><img src="http://odoqyfmpu.bkt.clouddn.com/5.png" alt="image">  </p>
<p>出现以上界面则说明安装成功。</p>
</blockquote>
<h3 id="运行nodejs"><a href="#运行nodejs" class="headerlink" title="运行nodejs"></a>运行nodejs</h3><blockquote>
<p>这里假设我们在D盘新建文件夹Test，接下来右键新建文件app.js<br><img src="http://odoqyfmpu.bkt.clouddn.com/6.png" alt="image"><br><img src="http://odoqyfmpu.bkt.clouddn.com/7.png" alt="image"><br>接下来编辑app.js中内容<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="string">"这是第一个node"</span>)</div></pre></td></tr></table></figure></p>
<p>最后到了windows下最关键的一步了，我经常看见刚刚入坑的朋友出现这样的问题。许多朋友们都是直接在命令行输入node app.js也就是下图所示的样子，然后系统提示没有找到这个模块。<br><img src="http://odoqyfmpu.bkt.clouddn.com/8.png" alt="image"><br>这是因为我们的文件是在D盘下建立的而node这个命令只能运行你当前目录下的文件，而windows下cmd默认目录是<strong>c:\Users\用户名</strong> 这个目录。所以我们必须先将目录cd到d盘test目录下，然后使用node app.js来运行文件。<br><img src="http://odoqyfmpu.bkt.clouddn.com/9.png" alt="image"><br>可以看见出现了<strong>这是第一个node</strong>说明运行成功  </p>
</blockquote>
<h2 id="在linux下安装并运行nodejs"><a href="#在linux下安装并运行nodejs" class="headerlink" title="在linux下安装并运行nodejs"></a>在linux下安装并运行nodejs</h2><h3 id="安装nodejs-1"><a href="#安装nodejs-1" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><blockquote>
<p>在Linux下我推荐使用nvm来管理node，因为nvm可以通过命令来进行多个版本之间切换。<br>首先我们需要安装nvm,可以使用<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.<span class="number">29.0</span>/install.sh | bash</div><div class="line"></div><div class="line">这个命令来安装nvm。 测试是否安装成功只要使用command -v nvm就可以看到是否安装成功</div><div class="line">如果没有成功可以试试重启终端。  </div><div class="line"></div><div class="line">nvm install stable          最新版的<span class="keyword">node</span>  </div><div class="line"><span class="title">nvm</span> install <span class="number">5.10</span>.<span class="number">1</span>          <span class="number">5.10</span>.<span class="number">1</span>版本的<span class="keyword">node</span></div><div class="line"><span class="title">nvm</span> use <span class="number">5</span>                   切换到<span class="number">5.10</span>.<span class="number">1</span>版本</div><div class="line">nvm current                 最后一次下载的版本  </div><div class="line"></div><div class="line">查看<span class="keyword">node</span><span class="title">和npm</span>安装是否成功使用  </div><div class="line"></div><div class="line"><span class="keyword">node</span> <span class="title">-v</span> </div><div class="line">npm -v</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="http://odoqyfmpu.bkt.clouddn.com/10.png" alt="image"><br><img src="http://odoqyfmpu.bkt.clouddn.com/11.png" alt="image"><br>都出现出现版本号则说明安装成功。  </p>
<h3 id="运行nodejs-1"><a href="#运行nodejs-1" class="headerlink" title="运行nodejs"></a>运行nodejs</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">mkdir</span> <span class="keyword">test</span>      新建<span class="keyword">test</span>文件夹</div><div class="line">touch <span class="keyword">app</span>.js    新建<span class="keyword">app</span>.js文件</div><div class="line">使用linux自带的vi/vim，为<span class="keyword">app</span>.js编辑内容</div><div class="line">console.<span class="built_in">log</span>(<span class="string">"这是第一个node"</span>)</div><div class="line"></div><div class="line">然后  </div><div class="line"></div><div class="line"><span class="keyword">cd</span> <span class="keyword">test</span></div><div class="line">node <span class="keyword">app</span>.js</div></pre></td></tr></table></figure>
<blockquote>
<p>可以看见出现了<strong>这是第一个node</strong>说明运行成功  </p>
<p>参考链接<br><a href="http://www.tuicool.com/articles/Vzquy2" target="_blank" rel="external">使用 nvm 管理不同版本的 node 与 npm</a><br><a href="http://www.ibm.com/developerworks/cn/opensource/os-nodejs/" target="_blank" rel="external">nodejs究竟是什么</a></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://yatokami.github.io/2016/09/10/Hello-World/</url>
      <content type="html"><![CDATA[<p>xxx</p>
]]></content>
    </entry>
    
  
  
</search>
